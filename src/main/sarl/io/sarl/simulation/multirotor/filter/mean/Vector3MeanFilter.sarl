/** 
 * 
 */
package io.sarl.simulation.multirotor.filter.mean

import org.arakhne.afc.math.geometry.d3.d.Vector3d

/** 
 * Mean filter for Vector3 objects
 * @author Alexandre
 * 
 */
class Vector3MeanFilter extends AbstractMeanFilter<Vector3d> {
	
	/**
	 * Builds the mean filter with the given default value
	 * @param size the size of the kernel
	 * @param defaultValue the default value when building the kernel
	 */
	new (size: Integer, defaultValue: Vector3d = new Vector3d()) {
		super(size, defaultValue)
	}
	
	def filter(v : Vector3d) : Vector3d {
		addValue(v)
		
		return values.map[it * (1.0f / values.size)].reduce[p1, p2 | p1 + p2]
	}
	
}
